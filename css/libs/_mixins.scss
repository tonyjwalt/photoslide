@mixin backgroundSize($size)
{
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -o-background-size: $size;
  background-size: $size;
}

@mixin shadow($h, $v, $blur, $spread, $color)
{
  -webkit-box-shadow: $h $v $blur $spread $color !important;
  -moz-box-shadow: $h $v $blur $spread $color !important;
  -o-box-shadow: $h $v $blur $spread $color !important;
  box-shadow: $h $v $blur $spread $color !important;
}

@mixin shadowInset($h, $v, $blur, $spread, $color)
{
  -webkit-box-shadow: inset $h $v $blur $spread $color;
  -moz-box-shadow: inset $h $v $blur $spread $color;
  -o-box-shadow: inset $h $v $blur $spread $color;
  box-shadow: inset $h $v $blur $spread $color;
}

@mixin textShadow($h, $v, $size, $color)
{
  -moz-text-shadow: $h $v $size $color;
  -webkit-text-shadow: $h $v $size $color;
  -o-text-shadow: $h $v $size $color;
  text-shadow: $h $v $size $color;
}

@mixin rounded($radius)
{
  -moz-border-radius: $radius !important;
  -webkit-border-radius: $radius !important;
  -o-border-radius: $radius !important;
  border-radius: $radius !important;
}

@mixin roundedTop($radius)
{
  -moz-border-radius: $radius $radius 0px 0px;
  -webkit-border-radius: $radius $radius 0px 0px;
  -o-border-radius: $radius $radius 0px 0px;
  border-radius: $radius $radius 0px 0px;
}

@mixin roundedBottom($radius)
{
  -moz-border-radius: 0px 0px $radius $radius;
  -webkit-border-radius: 0px 0px $radius $radius;
  -o-border-radius: 0px 0px $radius $radius;
  border-radius: 0px 0px $radius $radius;
}

@mixin respondTo($media)
{
  @if $media == mobile
    {
        @media only screen and (max-width: $mobile) { @content; }
    }
    @else if $media == tablet
    {
        @media only screen and (max-width: $tablet) { @content; }
    }
  @else if $media == desktop
    {
        @media only screen and (min-width: $tablet + 1) { @content; }
    }
}
@mixin opacity($value)
{
  zoom: 1;
  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=" $value * 100 ")";
  filter: alpha(opacity=$value * 100);
  -moz-opacity: $value;
  -khtml-opacity: $value;
  opacity: $value;
}

@mixin scale($value)
{
  -ms-transform: scale($value);
  -webkit-transform: scale($value);
  -o-transform: scale($value);
  -moz-transform: scale($value);
}

@mixin origin($x, $y)
{
  transform-origin: $x $y;
  -ms-transform-origin: $x $y;
  -webkit-transform-origin: $x $y;
  -moz-transform-origin: $x $y;
  -o-transform-origin: $x $y;
}
@mixin crossTransition($params...){
    -moz-transition: $params; /* Firefox 4 */
    -webkit-transition: $params; /* Safari and Chrome */
    -o-transition: $params; /* Opera */
    transition: $params;
}
@mixin crossShadow($params...){
    -webkit-box-shadow: $params;
    -moz-box-shadow: $params;
    box-shadow: $params;
}
@mixin crossRadius($params){
    -webkit-border-radius: $params;
    -moz-border-radius: $params;
    border-radius: $params;
}
@mixin baseCrossGrad($from, $to){
    background-color: $from;
    background: -webkit-gradient(linear, 0 0, 0 bottom, from( $from ),to( $to ));
    background: -webkit-linear-gradient( $from,  $to );
    background: -moz-linear-gradient( $from,  $to );
    background: -ms-linear-gradient( $from,  $to );
    background: -o-linear-gradient( $from,  $to );
    background: linear-gradient( $from,  $to );
}
@mixin crossGradHorizontal($from, $to){
  background: $from;
  background: -moz-linear-gradient(left,  $from 0%, $to 100%);
  background: -webkit-gradient(linear, left top, right top, color-stop(0%,$from), color-stop(100%,$to));
  background: -webkit-linear-gradient(left,  $from 0%,$to 100%);
  background: -o-linear-gradient(left,  $from 0%,$to 100%);
  background: -ms-linear-gradient(left,  $from 0%,$to 100%);
  background: linear-gradient(to right,  $from 0%,$to 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=1 );
}
@mixin box-size()
{
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
@mixin clearfix()
{
  *zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table; }
  &:after {
    clear: both; }
}
@mixin hidevisually() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

@mixin iconSprite($top, $left, $repeat) {
  background:url($rootPath+'img/sprites/sprite-icons.png') $top $left $repeat;
  overflow:hidden;
  width:auto;
  display:block;
  img{width:auto;}
}

